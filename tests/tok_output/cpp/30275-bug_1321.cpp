Line [Token]             Text
1    [PREPROC]           #
1    [PP_INCLUDE]        include
1    [PREPROC_BODY]      <utility>
1    [NEWLINE]           
3    [TEMPLATE]          template
3    [ANGLE_OPEN]        <
3    [TYPENAME]          typename
3    [TYPE]              Fun
3    [COMMA]             ,
3    [TYPENAME]          typename
3    [ELLIPSIS]          ...
3    [TYPE]              Args
3    [ANGLE_CLOSE]       >
3    [NEWLINE]           
4    [QUALIFIER]         inline
4    [SIZEOF]            decltype
4    [PAREN_OPEN]        (
4    [TYPE]              auto
4    [PAREN_CLOSE]       )
4    [FUNC_CALL]         Invoke
4    [FPAREN_OPEN]       (
4    [WORD]              Fun
4    [BOOL]              &&
4    [WORD]              f
4    [COMMA]             ,
4    [WORD]              Args
4    [BOOL]              &&
4    [ELLIPSIS]          ...
4    [WORD]              args
4    [FPAREN_CLOSE]      )
4    [NEWLINE]           
5    [NOEXCEPT]          noexcept
5    [PAREN_OPEN]        (
5    [NOEXCEPT]          noexcept
5    [PAREN_OPEN]        (
5    [TYPE]              std
5    [DC_MEMBER]         ::
5    [FUNC_CALL]         forward
5    [ANGLE_OPEN]        <
5    [TYPE]              Fun
5    [ANGLE_CLOSE]       >
5    [FPAREN_OPEN]       (
5    [WORD]              f
5    [FPAREN_CLOSE]      )
5    [FPAREN_OPEN]       (
5    [TYPE]              std
5    [DC_MEMBER]         ::
5    [FUNC_CALL]         forward
5    [ANGLE_OPEN]        <
5    [TYPE]              Args
5    [ANGLE_CLOSE]       >
5    [FPAREN_OPEN]       (
5    [WORD]              args
5    [FPAREN_CLOSE]      )
5    [ELLIPSIS]          ...
5    [FPAREN_CLOSE]      )
5    [PAREN_CLOSE]       )
5    [PAREN_CLOSE]       )
5    [NEWLINE]           
6    [BRACE_OPEN]        {
6    [RETURN]            return
6    [TYPE]              std
6    [DC_MEMBER]         ::
6    [FUNC_CALL]         forward
6    [ANGLE_OPEN]        <
6    [TYPE]              Fun
6    [ANGLE_CLOSE]       >
6    [FPAREN_OPEN]       (
6    [WORD]              f
6    [FPAREN_CLOSE]      )
6    [FPAREN_OPEN]       (
6    [TYPE]              std
6    [DC_MEMBER]         ::
6    [FUNC_CALL]         forward
6    [ANGLE_OPEN]        <
6    [TYPE]              Args
6    [ANGLE_CLOSE]       >
6    [FPAREN_OPEN]       (
6    [WORD]              args
6    [FPAREN_CLOSE]      )
6    [ELLIPSIS]          ...
6    [FPAREN_CLOSE]      )
6    [SEMICOLON]         ;
6    [BRACE_CLOSE]       }
6    [NEWLINE]           