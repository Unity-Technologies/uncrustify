Line [Token]             Text
1    [TYPENAME]          typename
1    [TYPE]              std
1    [DC_MEMBER]         ::
1    [TYPE]              enable_if
1    [ANGLE_OPEN]        <
1    [NOT]               !
1    [TYPE]              std
1    [DC_MEMBER]         ::
1    [TYPE]              is_void
1    [ANGLE_OPEN]        <
1    [TYPE]              T
1    [ANGLE_CLOSE]       >
1    [DC_MEMBER]         ::
1    [TYPE]              value
1    [COMMA]             ,
1    [TYPE]              QVector
1    [ANGLE_OPEN]        <
1    [TYPE]              T
1    [ANGLE_CLOSE]       >
1    [ANGLE_CLOSE]       >
1    [DC_MEMBER]         ::
1    [TYPE]              type
1    [FUNC_DEF]          dummy
1    [FPAREN_OPEN]       (
1    [QUALIFIER]         const
1    [TYPE]              std
1    [DC_MEMBER]         ::
1    [TYPE]              function
1    [ANGLE_OPEN]        <
1    [TYPE]              T
1    [PTR_TYPE]          *
1    [PAREN_OPEN]        (
1    [QUALIFIER]         const
1    [TYPE]              S
1    [BYREF]             &
1    [PAREN_CLOSE]       )
1    [ANGLE_CLOSE]       >
1    [BYREF]             &
1    [WORD]              pFunc
1    [COMMA]             ,
1    [QUALIFIER]         const
1    [TYPE]              QVector
1    [ANGLE_OPEN]        <
1    [TYPE]              S
1    [ANGLE_CLOSE]       >
1    [BYREF]             &
1    [WORD]              pItems
1    [FPAREN_CLOSE]      )
1    [NEWLINE]           
2    [BRACE_OPEN]        {
2    [NEWLINE]           
3    [RETURN]            return
3    [FUNC_CALL]         QVector
3    [ANGLE_OPEN]        <
3    [TYPE]              T
3    [ANGLE_CLOSE]       >
3    [FPAREN_OPEN]       (
3    [FPAREN_CLOSE]      )
3    [SEMICOLON]         ;
3    [NEWLINE]           
4    [BRACE_CLOSE]       }
4    [NEWLINE]           
7    [TYPENAME]          typename
7    [TYPE]              std
7    [DC_MEMBER]         ::
7    [TYPE]              enable_if
7    [ANGLE_OPEN]        <
7    [NOT]               !
7    [TYPE]              std
7    [DC_MEMBER]         ::
7    [TYPE]              is_void
7    [ANGLE_OPEN]        <
7    [TYPE]              T
7    [ANGLE_CLOSE]       >
7    [DC_MEMBER]         ::
7    [TYPE]              value
7    [COMMA]             ,
7    [TYPE]              QVector
7    [ANGLE_OPEN]        <
7    [TYPE]              T
7    [ANGLE_CLOSE]       >
7    [ANGLE_CLOSE]       >
7    [DC_MEMBER]         ::
7    [TYPE]              type
7    [FUNC_DEF]          filter
7    [FPAREN_OPEN]       (
7    [QUALIFIER]         const
7    [TYPE]              std
7    [DC_MEMBER]         ::
7    [TYPE]              function
7    [ANGLE_OPEN]        <
7    [CPP_CAST]          bool
7    [PAREN_OPEN]        (
7    [QUALIFIER]         const
7    [TYPE]              T
7    [BYREF]             &
7    [PAREN_CLOSE]       )
7    [ANGLE_CLOSE]       >
7    [BYREF]             &
7    [WORD]              pFunc
7    [COMMA]             ,
7    [QUALIFIER]         const
7    [TYPE]              QVector
7    [ANGLE_OPEN]        <
7    [TYPE]              T
7    [ANGLE_CLOSE]       >
7    [BYREF]             &
7    [WORD]              pItems
7    [FPAREN_CLOSE]      )
7    [NEWLINE]           
8    [BRACE_OPEN]        {
8    [NEWLINE]           
9    [RETURN]            return
9    [FUNC_CALL]         QVector
9    [ANGLE_OPEN]        <
9    [TYPE]              T
9    [ANGLE_CLOSE]       >
9    [FPAREN_OPEN]       (
9    [FPAREN_CLOSE]      )
9    [SEMICOLON]         ;
9    [NEWLINE]           
10   [BRACE_CLOSE]       }
10   [NEWLINE]           