Line [Token]             Text
1    [TYPE]              var
1    [WORD]              dude
1    [ASSIGN]            =
1    [STRING]            "Dude"
1    [SEMICOLON]         ;
1    [NEWLINE]           
2    [TYPE]              var
2    [WORD]              dude2
2    [ASSIGN]            =
2    [NEW]               new
2    [BRACE_OPEN]        {
2    [WORD]              Name
2    [ASSIGN]            =
2    [STRING]            "Dude"
2    [COMMA]             ,
2    [WORD]              Age
2    [ASSIGN]            =
2    [NUMBER]            30
2    [COMMA]             ,
2    [BRACE_CLOSE]       }
2    [SEMICOLON]         ;
2    [NEWLINE]           
3    [TYPE]              var
3    [WORD]              dude3
3    [ASSIGN]            =
3    [NEW]               new
3    [BRACE_OPEN]        {
3    [WORD]              Name
3    [ASSIGN]            =
3    [STRING]            "Dude"
3    [COMMA]             ,
3    [WORD]              Age
3    [ASSIGN]            =
3    [NUMBER]            30
3    [COMMA]             ,
3    [WORD]              Kids
3    [ASSIGN]            =
3    [NEW]               new
3    [BRACE_OPEN]        {
3    [WORD]              Name
3    [ASSIGN]            =
3    [STRING]            "LittleDude"
3    [BRACE_CLOSE]       }
3    [BRACE_CLOSE]       }
3    [SEMICOLON]         ;
3    [NEWLINE]           
4    [TYPE]              var
4    [WORD]              dude4
4    [ASSIGN]            =
4    [NEW]               new
4    [BRACE_OPEN]        {
4    [WORD]              Name
4    [ASSIGN]            =
4    [STRING]            "Dude"
4    [COMMA]             ,
4    [WORD]              Age
4    [ASSIGN]            =
4    [NUMBER]            30
4    [COMMA]             ,
4    [WORD]              Kids
4    [ASSIGN]            =
4    [NEW]               new
4    [TSQUARE]           []
4    [BRACE_OPEN]        {
4    [STRING]            "LittleDude"
4    [BRACE_CLOSE]       }
4    [BRACE_CLOSE]       }
4    [SEMICOLON]         ;
4    [NEWLINE]           
5    [TYPE]              var
5    [WORD]              dude5
5    [ASSIGN]            =
5    [NEW]               new
5    [BRACE_OPEN]        {
5    [WORD]              Name
5    [ASSIGN]            =
5    [STRING]            "Dude"
5    [COMMA]             ,
5    [WORD]              Age
5    [ASSIGN]            =
5    [NUMBER]            30
5    [COMMA]             ,
5    [WORD]              Kids
5    [ASSIGN]            =
5    [NEW]               new
5    [TSQUARE]           []
5    [BRACE_OPEN]        {
5    [NEW]               new
5    [BRACE_OPEN]        {
5    [WORD]              Name
5    [ASSIGN]            =
5    [STRING]            "LittleDude"
5    [BRACE_CLOSE]       }
5    [BRACE_CLOSE]       }
5    [BRACE_CLOSE]       }
5    [SEMICOLON]         ;
5    [NEWLINE]           
6    [TYPE]              Action
6    [WORD]              y
6    [ASSIGN]            =
6    [PAREN_OPEN]        (
6    [PAREN_CLOSE]       )
6    [LAMBDA]            =>
6    [BRACE_OPEN]        {
6    [BRACE_CLOSE]       }
6    [SEMICOLON]         ;
6    [NEWLINE]           
7    [TYPE]              Func
7    [ANGLE_OPEN]        <
7    [TYPE]              int
7    [COMMA]             ,
7    [TYPE]              float
7    [COMMA]             ,
7    [TYPE]              bool
7    [ANGLE_CLOSE]       >
7    [WORD]              z
7    [ASSIGN]            =
7    [PAREN_OPEN]        (
7    [WORD]              a
7    [COMMA]             ,
7    [WORD]              b
7    [PAREN_CLOSE]       )
7    [LAMBDA]            =>
7    [BRACE_OPEN]        {
7    [TYPE]              var
7    [WORD]              z
7    [ASSIGN]            =
7    [NEW]               new
7    [BRACE_OPEN]        {
7    [WORD]              a
7    [COMMA]             ,
7    [WORD]              b
7    [BRACE_CLOSE]       }
7    [SEMICOLON]         ;
7    [RETURN]            return
7    [WORD]              z
7    [COMPARE]           ==
7    [WORD]              null
7    [SEMICOLON]         ;
7    [BRACE_CLOSE]       }
7    [SEMICOLON]         ;
7    [NEWLINE]           