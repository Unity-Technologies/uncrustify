Line [Token]             Text
1    [PREPROC]           #
1    [PP_INCLUDE]        import
1    [PREPROC_BODY]      <Foundation/Foundation.h>
1    [NEWLINE]           
3    [PREPROC]           #
3    [PP_DEFINE]         define
3    [MACRO_FUNC]        UIColorFromRGB
3    [FPAREN_OPEN]       (
3    [WORD]              rgbValue
3    [FPAREN_CLOSE]      )
3    [SQUARE_OPEN]       [
3    [OC_MSG_CLASS]      UIColor
3    [OC_MSG_FUNC]       colorWithRed
3    [OC_COLON]          :
3    [PAREN_OPEN]        (
3    [PAREN_OPEN]        (
3    [TYPE]              float
3    [PAREN_CLOSE]       )
3    [PAREN_OPEN]        (
3    [PAREN_OPEN]        (
3    [WORD]              rgbValue
3    [ARITH]             &
3    [NUMBER]            0xFF0000
3    [PAREN_CLOSE]       )
3    [ARITH]             >>
3    [NUMBER]            16
3    [PAREN_CLOSE]       )
3    [PAREN_CLOSE]       )
3    [ARITH]             /
3    [NUMBER_FP]         255.0
3    [OC_MSG_NAME]       green
3    [OC_COLON]          :
3    [PAREN_OPEN]        (
3    [PAREN_OPEN]        (
3    [TYPE]              float
3    [PAREN_CLOSE]       )
3    [PAREN_OPEN]        (
3    [PAREN_OPEN]        (
3    [WORD]              rgbValue
3    [ARITH]             &
3    [NUMBER]            0xFF00
3    [PAREN_CLOSE]       )
3    [ARITH]             >>
3    [NUMBER]            8
3    [PAREN_CLOSE]       )
3    [PAREN_CLOSE]       )
3    [ARITH]             /
3    [NUMBER_FP]         255.0
3    [OC_MSG_NAME]       blue
3    [OC_COLON]          :
3    [PAREN_OPEN]        (
3    [PAREN_OPEN]        (
3    [TYPE]              float
3    [PAREN_CLOSE]       )
3    [PAREN_OPEN]        (
3    [WORD]              rgbValue
3    [ARITH]             &
3    [NUMBER]            0xFF
3    [PAREN_CLOSE]       )
3    [PAREN_CLOSE]       )
3    [ARITH]             /
3    [NUMBER_FP]         255.0
3    [OC_MSG_NAME]       alpha
3    [OC_COLON]          :
3    [NUMBER_FP]         1.0
3    [SQUARE_CLOSE]      ]
3    [NEWLINE]           
5    [PREPROC]           #
5    [PP_IF]             if
5    [WORD]              TARGET_OS_IPHONE
5    [NEWLINE]           
6    [PREPROC]           #
6    [PP_DEFINE]         define
6    [MACRO_FUNC]        GL_CONTEXT_ALLOC
6    [FPAREN_OPEN]       (
6    [WORD]              parentContext
6    [FPAREN_CLOSE]      )
6    [SQUARE_OPEN]       [
6    [SQUARE_OPEN]       [
6    [OC_MSG_CLASS]      EAGLContext
6    [OC_MSG_FUNC]       alloc
6    [SQUARE_CLOSE]      ]
6    [OC_MSG_FUNC]       initWithAPI
6    [OC_COLON]          :
6    [FUNC_CALL]         GL_CONTEXT_VERSION
6    [FPAREN_OPEN]       (
6    [WORD]              parentContext
6    [FPAREN_CLOSE]      )
6    [OC_MSG_NAME]       sharegroup
6    [OC_COLON]          :
6    [SQUARE_OPEN]       [
6    [OC_MSG_CLASS]      parentContext
6    [OC_MSG_FUNC]       sharegroup
6    [SQUARE_CLOSE]      ]
6    [SQUARE_CLOSE]      ]
6    [NEWLINE]           
7    [PREPROC]           #
7    [PP_ELSE]           else
7    [NEWLINE]           
8    [PREPROC]           #
8    [PP_DEFINE]         define
8    [MACRO_FUNC]        GL_CONTEXT_ALLOC
8    [FPAREN_OPEN]       (
8    [WORD]              parentContext
8    [FPAREN_CLOSE]      )
8    [SQUARE_OPEN]       [
8    [SQUARE_OPEN]       [
8    [OC_MSG_CLASS]      NSOpenGLContext
8    [OC_MSG_FUNC]       alloc
8    [SQUARE_CLOSE]      ]
8    [OC_MSG_FUNC]       initWithFormat
8    [OC_COLON]          :
8    [SQUARE_OPEN]       [
8    [SQUARE_OPEN]       [
8    [OC_MSG_CLASS]      NSOpenGLPixelFormat
8    [OC_MSG_FUNC]       alloc
8    [SQUARE_CLOSE]      ]
8    [OC_MSG_FUNC]       initWithCGLPixelFormatObj
8    [OC_COLON]          :
8    [FUNC_CALL]         CGLGetPixelFormat
8    [FPAREN_OPEN]       (
8    [SQUARE_OPEN]       [
8    [OC_MSG_CLASS]      parentContext
8    [OC_MSG_FUNC]       CGLContextObj
8    [SQUARE_CLOSE]      ]
8    [FPAREN_CLOSE]      )
8    [SQUARE_CLOSE]      ]
8    [OC_MSG_NAME]       shareContext
8    [OC_COLON]          :
8    [WORD]              parentContext
8    [SQUARE_CLOSE]      ]
8    [NEWLINE]           
9    [PREPROC]           #
9    [PP_ENDIF]          endif
9    [NEWLINE]           
11   [PREPROC]           #
11   [PP_DEFINE]         define
11   [MACRO_FUNC]        NSLocalizedString
11   [FPAREN_OPEN]       (
11   [WORD]              key
11   [COMMA]             ,
11   [WORD]              comment
11   [FPAREN_CLOSE]      )
11   [NL_CONT]           \
12   [SQUARE_OPEN]       [
12   [OC_MSG_CLASS]      TestClassBundle
12   [OC_MSG_FUNC]       localizedStringForKey
12   [OC_COLON]          :
12   [PAREN_OPEN]        (
12   [WORD]              key
12   [PAREN_CLOSE]       )
12   [OC_MSG_NAME]       value
12   [OC_COLON]          :
12   [STRING]            @""
12   [OC_MSG_NAME]       table
12   [OC_COLON]          :
12   [WORD]              nil
12   [SQUARE_CLOSE]      ]
12   [NEWLINE]           
14   [OC_INTF]           @interface
14   [OC_CLASS]          TestClass
14   [CLASS_COLON]       :
14   [WORD]              NSObject
14   [NEWLINE]           
15   [OC_END]            @end
15   [NEWLINE]           
17   [OC_IMPL]           @implementation
17   [OC_CLASS]          TestClass
17   [NEWLINE]           
18   [OC_END]            @end
18   [NEWLINE]           