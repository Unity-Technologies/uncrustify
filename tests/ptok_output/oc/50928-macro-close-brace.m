Line [Parent]            Text
1    [PP_INCLUDE]        #
1    [NONE]              import
1    [NONE]              <Foundation/Foundation.h>
1    [NONE]              
3    [PP_IF]             #
3    [NONE]              if
3    [NONE]              TARGET_RT_BIG_ENDIAN
3    [NONE]              
4    [PP_DEFINE]         #
4    [NONE]              define
4    [NONE]              FourCC2Str
4    [MACRO_FUNC]        (
4    [NONE]              fourcc
4    [MACRO_FUNC]        )
4    [C_CAST]            (
4    [C_CAST]            const
4    [C_CAST]            char
4    [C_CAST]            []
4    [C_CAST]            )
4    [C_CAST]            {
4    [NONE]              *
4    [NONE]              (
4    [C_CAST]            (
4    [C_CAST]            char
4    [C_CAST]            *
4    [C_CAST]            )
4    [NONE]              &
4    [NONE]              fourcc
4    [NONE]              )
4    [NONE]              ,
4    [NONE]              *
4    [NONE]              (
4    [NONE]              (
4    [C_CAST]            (
4    [C_CAST]            char
4    [C_CAST]            *
4    [C_CAST]            )
4    [NONE]              &
4    [NONE]              fourcc
4    [NONE]              )
4    [NONE]              +
4    [NONE]              1
4    [NONE]              )
4    [NONE]              ,
4    [NONE]              *
4    [NONE]              (
4    [NONE]              (
4    [C_CAST]            (
4    [C_CAST]            char
4    [C_CAST]            *
4    [C_CAST]            )
4    [NONE]              &
4    [NONE]              fourcc
4    [NONE]              )
4    [NONE]              +
4    [NONE]              2
4    [NONE]              )
4    [NONE]              ,
4    [NONE]              *
4    [NONE]              (
4    [NONE]              (
4    [C_CAST]            (
4    [C_CAST]            char
4    [C_CAST]            *
4    [C_CAST]            )
4    [NONE]              &
4    [NONE]              fourcc
4    [NONE]              )
4    [NONE]              +
4    [NONE]              3
4    [NONE]              )
4    [NONE]              ,
4    [NONE]              0
4    [C_CAST]            }
4    [NONE]              
5    [PP_ELSE]           #
5    [NONE]              else
5    [NONE]              
6    [PP_DEFINE]         #
6    [NONE]              define
6    [NONE]              FourCC2Str
6    [MACRO_FUNC]        (
6    [NONE]              fourcc
6    [MACRO_FUNC]        )
6    [C_CAST]            (
6    [C_CAST]            const
6    [C_CAST]            char
6    [C_CAST]            []
6    [C_CAST]            )
6    [C_CAST]            {
6    [NONE]              *
6    [NONE]              (
6    [NONE]              (
6    [C_CAST]            (
6    [C_CAST]            char
6    [C_CAST]            *
6    [C_CAST]            )
6    [NONE]              &
6    [NONE]              fourcc
6    [NONE]              )
6    [NONE]              +
6    [NONE]              3
6    [NONE]              )
6    [NONE]              ,
6    [NONE]              *
6    [NONE]              (
6    [NONE]              (
6    [C_CAST]            (
6    [C_CAST]            char
6    [C_CAST]            *
6    [C_CAST]            )
6    [NONE]              &
6    [NONE]              fourcc
6    [NONE]              )
6    [NONE]              +
6    [NONE]              2
6    [NONE]              )
6    [NONE]              ,
6    [NONE]              *
6    [NONE]              (
6    [NONE]              (
6    [C_CAST]            (
6    [C_CAST]            char
6    [C_CAST]            *
6    [C_CAST]            )
6    [NONE]              &
6    [NONE]              fourcc
6    [NONE]              )
6    [NONE]              +
6    [NONE]              1
6    [NONE]              )
6    [NONE]              ,
6    [NONE]              *
6    [NONE]              (
6    [NONE]              (
6    [C_CAST]            (
6    [C_CAST]            char
6    [C_CAST]            *
6    [C_CAST]            )
6    [NONE]              &
6    [NONE]              fourcc
6    [NONE]              )
6    [NONE]              +
6    [NONE]              0
6    [NONE]              )
6    [NONE]              ,
6    [NONE]              0
6    [C_CAST]            }
6    [NONE]              
7    [PP_ENDIF]          #
7    [NONE]              endif
7    [NONE]              
9    [PP_IF]             #
9    [NONE]              if
9    [NONE]              1
9    [NONE]              
10   [PP_DEFINE]         #
10   [NONE]              define
10   [NONE]              SYNCHRONIZED_BEGIN
10   [MACRO_FUNC]        (
10   [NONE]              x
10   [MACRO_FUNC]        )
10   [NONE]              @synchronized
10   [FUNC_CALL]         (
10   [NONE]              x
10   [FUNC_CALL]         )
10   [NONE]              {
10   [NONE]              
11   [PP_DEFINE]         #
11   [NONE]              define
11   [NONE]              SYNCHRONIZED_END
11   [NONE]              }
11   [NONE]              
12   [PP_ELSE]           #
12   [NONE]              else
12   [NONE]              
13   [PP_DEFINE]         #
13   [NONE]              define
13   [NONE]              SYNCHRONIZED_BEGIN
13   [MACRO_FUNC]        (
13   [NONE]              x
13   [MACRO_FUNC]        )
13   [NONE]              
14   [PP_DEFINE]         #
14   [NONE]              define
14   [NONE]              SYNCHRONIZED_END
14   [NONE]              
15   [PP_ENDIF]          #
15   [NONE]              endif
15   [NONE]              
17   [PP_DEFINE]         #
17   [NONE]              define
17   [NONE]              AUTORELEASEPOOL_BEGIN
17   [NONE]              @autoreleasepool
17   [NONE]              {
17   [NONE]              
18   [PP_DEFINE]         #
18   [NONE]              define
18   [NONE]              AUTORELEASEPOOL_END
18   [NONE]              }
18   [NONE]              