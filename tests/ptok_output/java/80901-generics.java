Line [Parent]            Text
1    [NONE]              public
1    [NONE]              class
1    [CLASS]             TestClass
1    [CLASS]             {
1    [NONE]              
2    [FUNC_DEF]          private
2    [FUNC_DEF]          static
2    [FUNC_DEF]          void
2    [NONE]              initMap
2    [FUNC_DEF]          (
2    [NONE]              void
2    [FUNC_DEF]          )
2    [FUNC_DEF]          {
2    [NONE]              
3    [NONE]              HashMap
3    [TEMPLATE]          <
3    [NONE]              String
3    [NONE]              ,
3    [NONE]              HashMap
3    [TEMPLATE]          <
3    [NONE]              String
3    [NONE]              ,
3    [NONE]              List
3    [TEMPLATE]          <
3    [NONE]              Track
3    [TEMPLATE]          >
3    [TEMPLATE]          >
3    [TEMPLATE]          >
3    [NONE]              resolutionTracks
3    [NONE]              =
3    [NONE]              new
3    [NONE]              HashMap
3    [TEMPLATE]          <
3    [NONE]              String
3    [NONE]              ,
3    [NONE]              HashMap
3    [TEMPLATE]          <
3    [NONE]              String
3    [NONE]              ,
3    [NONE]              List
3    [TEMPLATE]          <
3    [NONE]              Track
3    [TEMPLATE]          >
3    [TEMPLATE]          >
3    [TEMPLATE]          >
3    [FUNC_CALL]         (
3    [FUNC_CALL]         )
3    [NONE]              ;
3    [NONE]              
4    [FUNC_DEF]          }
4    [NONE]              
6    [FUNC_DEF]          private
6    [FUNC_DEF]          static
6    [FUNC_DEF]          void
6    [NONE]              addTrackToMap
6    [FUNC_DEF]          (
6    [NONE]              String
6    [NONE]              resolution
6    [NONE]              ,
6    [NONE]              Track
6    [NONE]              track
6    [NONE]              ,
6    [NONE]              HashMap
6    [TEMPLATE]          <
6    [NONE]              String
6    [NONE]              ,
6    [NONE]              HashMap
6    [TEMPLATE]          <
6    [NONE]              String
6    [NONE]              ,
6    [NONE]              List
6    [TEMPLATE]          <
6    [NONE]              Track
6    [TEMPLATE]          >
6    [TEMPLATE]          >
6    [TEMPLATE]          >
6    [NONE]              resolutionTracks
6    [FUNC_DEF]          )
6    [FUNC_DEF]          {
6    [NONE]              
7    [NONE]              HashMap
7    [TEMPLATE]          <
7    [NONE]              String
7    [NONE]              ,
7    [NONE]              List
7    [TEMPLATE]          <
7    [NONE]              Track
7    [TEMPLATE]          >
7    [TEMPLATE]          >
7    [NONE]              tracks
7    [NONE]              =
7    [NONE]              null
7    [NONE]              ;
7    [NONE]              
9    [NONE]              if
9    [IF]                (
9    [NONE]              resolutionTracks
9    [NONE]              .
9    [NONE]              containsKey
9    [FUNC_CALL]         (
9    [NONE]              resolution
9    [FUNC_CALL]         )
9    [IF]                )
9    [IF]                {
9    [NONE]              
10   [NONE]              tracks
10   [NONE]              =
10   [NONE]              resolutionTracks
10   [NONE]              .
10   [NONE]              get
10   [FUNC_CALL]         (
10   [NONE]              resolution
10   [FUNC_CALL]         )
10   [NONE]              ;
10   [NONE]              
11   [IF]                }
11   [NONE]              else
11   [ELSE]              {
11   [NONE]              
12   [NONE]              tracks
12   [NONE]              =
12   [NONE]              new
12   [NONE]              HashMap
12   [TEMPLATE]          <
12   [NONE]              String
12   [NONE]              ,
12   [NONE]              List
12   [TEMPLATE]          <
12   [NONE]              Track
12   [TEMPLATE]          >
12   [TEMPLATE]          >
12   [FUNC_CALL]         (
12   [FUNC_CALL]         )
12   [NONE]              ;
12   [NONE]              
13   [NONE]              tracks
13   [NONE]              .
13   [NONE]              put
13   [FUNC_CALL]         (
13   [NONE]              "soun"
13   [NONE]              ,
13   [NONE]              new
13   [NONE]              LinkedList
13   [TEMPLATE]          <
13   [NONE]              Track
13   [TEMPLATE]          >
13   [FUNC_CALL]         (
13   [FUNC_CALL]         )
13   [FUNC_CALL]         )
13   [NONE]              ;
13   [NONE]              
14   [NONE]              tracks
14   [NONE]              .
14   [NONE]              put
14   [FUNC_CALL]         (
14   [NONE]              "vide"
14   [NONE]              ,
14   [NONE]              new
14   [NONE]              LinkedList
14   [TEMPLATE]          <
14   [NONE]              Track
14   [TEMPLATE]          >
14   [FUNC_CALL]         (
14   [FUNC_CALL]         )
14   [FUNC_CALL]         )
14   [NONE]              ;
14   [NONE]              
15   [NONE]              resolutionTracks
15   [NONE]              .
15   [NONE]              put
15   [FUNC_CALL]         (
15   [NONE]              resolution
15   [NONE]              ,
15   [NONE]              tracks
15   [FUNC_CALL]         )
15   [NONE]              ;
15   [NONE]              
16   [ELSE]              }
16   [NONE]              
18   [NONE]              if
18   [IF]                (
18   [NONE]              track
18   [NONE]              .
18   [NONE]              getHandler
18   [FUNC_CALL]         (
18   [FUNC_CALL]         )
18   [NONE]              !=
18   [NONE]              null
18   [IF]                )
18   [IF]                {
18   [NONE]              
19   [NONE]              if
19   [IF]                (
19   [NONE]              track
19   [NONE]              .
19   [NONE]              getHandler
19   [FUNC_CALL]         (
19   [FUNC_CALL]         )
19   [NONE]              .
19   [NONE]              equals
19   [FUNC_CALL]         (
19   [NONE]              "soun"
19   [FUNC_CALL]         )
19   [IF]                )
19   [IF]                {
19   [NONE]              
20   [NONE]              List
20   [TEMPLATE]          <
20   [NONE]              Track
20   [TEMPLATE]          >
20   [NONE]              audioTracks
20   [NONE]              =
20   [NONE]              tracks
20   [NONE]              .
20   [NONE]              get
20   [FUNC_CALL]         (
20   [NONE]              "soun"
20   [FUNC_CALL]         )
20   [NONE]              ;
20   [NONE]              
21   [NONE]              audioTracks
21   [NONE]              .
21   [NONE]              add
21   [FUNC_CALL]         (
21   [NONE]              track
21   [FUNC_CALL]         )
21   [NONE]              ;
21   [NONE]              
22   [IF]                }
22   [NONE]              else
22   [NONE]              if
22   [ELSEIF]            (
22   [NONE]              track
22   [NONE]              .
22   [NONE]              getHandler
22   [FUNC_CALL]         (
22   [FUNC_CALL]         )
22   [NONE]              .
22   [NONE]              equals
22   [FUNC_CALL]         (
22   [NONE]              "vide"
22   [FUNC_CALL]         )
22   [ELSEIF]            )
22   [ELSEIF]            {
22   [NONE]              
23   [NONE]              List
23   [TEMPLATE]          <
23   [NONE]              Track
23   [TEMPLATE]          >
23   [NONE]              videoTracks
23   [NONE]              =
23   [NONE]              tracks
23   [NONE]              .
23   [NONE]              get
23   [FUNC_CALL]         (
23   [NONE]              "vide"
23   [FUNC_CALL]         )
23   [NONE]              ;
23   [NONE]              
24   [NONE]              videoTracks
24   [NONE]              .
24   [NONE]              add
24   [FUNC_CALL]         (
24   [NONE]              track
24   [FUNC_CALL]         )
24   [NONE]              ;
24   [NONE]              
25   [ELSEIF]            }
25   [NONE]              
26   [IF]                }
26   [NONE]              
27   [FUNC_DEF]          }
27   [NONE]              
28   [CLASS]             }
28   [NONE]              